# NSE Adaptive Regime Trading System - Requirements
# Python 3.11+ required
# 
# IMPORTANT: Install using pip with --only-binary flag to avoid build issues:
# pip install -r requirements.txt --only-binary :all: --prefer-binary

# =============================================================================
# TIER 1: Market Data & Core Infrastructure
# =============================================================================
openbb>=4.5.0                    # Professional market data platform
duckdb>=0.10.0                   # High-performance OLAP database
sqlalchemy>=2.0.0                # Database ORM

# =============================================================================
# TIER 2: Data Processing & Numerical Computing (CORE)
# =============================================================================
pandas>=2.2.0                    # Data manipulation and analysis
numpy>=1.26.0,<2.0.0             # Numerical computing
scipy>=1.11.0                    # Scientific computing (use binary wheel)
pyarrow>=16.0.0                  # Columnar data format

# =============================================================================
# TIER 3: Data Validation & Configuration
# =============================================================================
pandera>=0.19.0                  # Data validation for pandas DataFrames
pydantic>=2.7.0                  # Data validation using Python type hints
pydantic-settings>=2.3.0         # Settings management with Pydantic
pyyaml>=6.0.0                    # YAML configuration files
python-dotenv>=1.0.0             # Environment variable management

# =============================================================================
# TIER 4: Logging & Utilities
# =============================================================================
loguru>=0.7.0                    # Modern logging library
tqdm>=4.66.0                     # Progress bars
python-dateutil>=2.9.0           # Date/time utilities
pytz>=2024.1                     # Timezone definitions
holidays>=0.52                   # Holiday calendar (includes India)

# =============================================================================
# TIER 5: Machine Learning (Core)
# =============================================================================
scikit-learn>=1.5.0              # ML utilities and preprocessing
lightgbm>=4.0.0                  # Gradient boosting
xgboost>=2.0.0                   # Alternative gradient boosting

# =============================================================================
# TIER 6: Trading Execution
# =============================================================================
kiteconnect>=4.0.0               # Zerodha Kite Connect API
requests>=2.32.0                 # HTTP library for API calls
websocket-client>=1.8.0          # WebSocket for real-time data

# =============================================================================
# TIER 7: Technical Analysis & Time Series
# =============================================================================
pandas-ta>=0.3.14b               # Pandas Technical Analysis
statsmodels>=0.14.0              # Statistical modeling
arch>=6.3.0                      # ARCH/GARCH models for volatility
hmmlearn>=0.3.0                  # Hidden Markov Models for regime detection

# =============================================================================
# TIER 8: Optimization & Portfolio Management
# =============================================================================
cvxpy>=1.5.0                     # Convex optimization
pyportfolioopt>=1.5.0            # Portfolio optimization

# =============================================================================
# TIER 9: Data Visualization
# =============================================================================
matplotlib>=3.9.0                # Plotting library
seaborn>=0.13.0                  # Statistical data visualization
plotly>=5.22.0                   # Interactive visualizations

# =============================================================================
# TIER 10: Testing & Quality Assurance
# =============================================================================
pytest>=8.2.0                    # Testing framework
pytest-cov>=5.0.0                # Coverage reporting
pytest-asyncio>=0.23.0           # Async test support
pytest-mock>=3.14.0              # Mocking for tests

# =============================================================================
# TIER 11: Code Quality & Development Tools
# =============================================================================
black>=24.4.0                    # Code formatting
isort>=5.13.0                    # Import sorting
flake8>=7.0.0                    # Linting
mypy>=1.10.0                     # Static type checking

# =============================================================================
# TIER 12: Jupyter & Interactive Development
# =============================================================================
jupyter>=1.0.0                   # Jupyter notebook
jupyterlab>=4.2.0                # JupyterLab interface
ipython>=8.25.0                  # Enhanced Python shell
ipywidgets>=8.1.0                # Interactive widgets for notebooks

# =============================================================================
# Installation Instructions
# =============================================================================
# For macOS (especially Apple Silicon M1/M2/M3):
# 
# Option 1 (RECOMMENDED): Install with binary wheels only
# pip install -r requirements.txt --prefer-binary
#
# Option 2: If scipy still fails, install it first via conda:
# conda install scipy numpy pandas scikit-learn
# pip install -r requirements.txt --no-deps  # then install rest
#
# Option 3: Use minimal requirements (most reliable):
# pip install -r requirements-minimal.txt
# Then add packages individually as needed
#
# =============================================================================
# Troubleshooting SciPy Build Issues on macOS
# =============================================================================
# If you get "Unknown compiler(s): gfortran" error:
# 
# Solution 1: Upgrade pip and use binary wheels
# pip install --upgrade pip setuptools wheel
# pip install scipy --only-binary scipy
# pip install -r requirements.txt --prefer-binary
#
# Solution 2: Use Homebrew Python (not recommended)
# brew install python@3.11 gcc gfortran
#
# Solution 3: Use Conda (recommended for scientific packages)
# conda install -c conda-forge scipy numpy pandas scikit-learn
#
# =============================================================================
